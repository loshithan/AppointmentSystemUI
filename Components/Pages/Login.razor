@* @page "/login"
@using AppointmentUI.Components.Layout;
@layout EmptyLayout


<PageTitle>Login</PageTitle>

<div class="min-h-screen flex items-center justify-center p-4 ">
  <div class="max-w-md w-full bg-white rounded-xl shadow-lg p-8">
    <h2 class="text-2xl font-bold text-gray-900 mb-6 text-center">Sign In</h2>
    
    <form class="space-y-4">
      <!-- Email Input -->
      <div>
        <label class="block text-sm font-medium text-gray-700 mb-1">Email</label>
        <input 
          type="email" 
          class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 outline-none transition-all"
          placeholder="your@email.com"
          required
        />
      </div>

      <!-- Password Input -->
      <div>
        <label class="block text-sm font-medium text-gray-700 mb-1">Password</label>
        <input 
          type="password" 
          class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 outline-none transition-all"
          placeholder="••••••••"
          required
        />
      </div>

      <!-- Remember Me and Forgot Password -->
      <div class="flex items-center justify-between">
        <label class="flex items-center">
          <input type="checkbox" class="rounded border-gray-300 text-indigo-600 focus:ring-indigo-500"/>
          <span class="ml-2 text-sm text-gray-600">Remember me</span>
        </label>
        <a href="#" class="text-sm text-indigo-600 hover:text-indigo-500">Forgot password?</a>
      </div>

      <!-- Sign In Button -->
      <button type="submit" class="w-full bg-indigo-600 hover:bg-indigo-700 text-white font-medium py-2.5 rounded-lg transition-colors">
        Sign In
      </button>
    </form>

    <!-- Sign Up Link -->
    <div class="mt-6 text-center text-sm text-gray-600">
      Don't have an account? 
      <a href="/register" class="text-indigo-600 hover:text-indigo-500 font-medium">Sign up</a>
    </div>
  </div>
</div>     *@

@page "/login"
@using AppointmentUI.Components.Layout
@using System.ComponentModel.DataAnnotations
@layout EmptyLayout
@inject HttpClient Http
@inject IConfiguration Configuration
@inject NavigationManager NavigationManager
@using System.Runtime.InteropServices;

<PageTitle>Login</PageTitle>

<div class="min-h-screen flex items-center justify-center p-4">
  <div class="max-w-md w-full bg-white rounded-xl shadow-lg p-8">
    <h2 class="text-2xl font-bold text-gray-900 mb-6 text-center">Sign In</h2>
    
    <EditForm Model="@loginModel" OnValidSubmit="HandleLogin">
      <DataAnnotationsValidator />
      <ValidationSummary />

      <!-- Email Input -->
      <div>
        <label class="block text-sm font-medium text-gray-700 mb-1">Email</label>
        <InputText 
          @bind-Value="loginModel.Email" 
          class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 outline-none transition-all"
          placeholder="your@email.com"
        />
        <ValidationMessage For="@(() => loginModel.Email)" />
      </div>

      <!-- Password Input -->
      <div>
        <label class="block text-sm font-medium text-gray-700 mb-1">Password</label>
        <InputText 
          @bind-Value="loginModel.Password" 
          type="password"
          class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 outline-none transition-all"
          placeholder="••••••••"
        />
        <ValidationMessage For="@(() => loginModel.Password)" />
      </div>

      <!-- Remember Me and Forgot Password -->
      <div class="flex items-center justify-between">
        <label class="flex items-center">
          <InputCheckbox @bind-Value="loginModel.RememberMe" class="rounded border-gray-300 text-indigo-600 focus:ring-indigo-500"/>
          <span class="ml-2 text-sm text-gray-600">Remember me</span>
        </label>
        <a href="#" class="text-sm text-indigo-600 hover:text-indigo-500">Forgot password?</a>
      </div>

      <!-- Sign In Button -->
      <button type="submit" class="w-full bg-indigo-600 hover:bg-indigo-700 text-white font-medium py-2.5 rounded-lg transition-colors">
        Sign In
      </button>
    </EditForm>

    <!-- Sign Up Link -->
    <div class="mt-6 text-center text-sm text-gray-600">
      Don't have an account? 
      <a href="/register" class="text-indigo-600 hover:text-indigo-500 font-medium">Sign up</a>
    </div>

    <!-- Error Message -->
    @if (!string.IsNullOrEmpty(errorMessage))
    {
        <div class="text-red-600 text-sm mt-4">
            @errorMessage
        </div>
    }
  </div>
</div>

@code {
    private LoginModel loginModel = new LoginModel();
    private string errorMessage;

    public class LoginModel
    {
        [Required(ErrorMessage = "Email is required.")]
        [EmailAddress(ErrorMessage = "Invalid email address.")]
        public string Email { get; set; }

        [Required(ErrorMessage = "Password is required.")]
        public string Password { get; set; }

        public bool RememberMe { get; set; }
    }

    private async Task HandleLogin()
    {
        try
        {
            // Retrieve the API base URL from configuration
            var baseUrl = Configuration["ApiSettings:BaseUrl"];

            // Send a POST request to the login endpoint
            var response = await Http.PostAsJsonAsync($"{baseUrl}/api/auth/login", loginModel);

            if (response.IsSuccessStatusCode)
            {
                // Handle successful login (e.g., navigate to the dashboard)
                NavigationManager.NavigateTo("/dashboard");
            }
            else
            {
                // Handle login failure
                errorMessage = "Invalid email or password.";
            }
        }
        catch (Exception ex)
        {
            errorMessage = "An error occurred. Please try again later.";
        }
    }
}
